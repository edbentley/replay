(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{141:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},d=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),b=r,m=d["".concat(i,".").concat(b)]||d[b]||s[b]||a;return n?o.a.createElement(m,p(p({ref:t},l),{},{components:n})):o.a.createElement(m,p({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},59:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),a=(n(0),n(141)),i={},p={unversionedId:"tutorial/14",id:"tutorial/14",isDocsHomePage:!1,title:"14",description:"14 - Pipes",source:"@site/docs/tutorial/14.md",permalink:"/docs/tutorial/14",editUrl:"https://github.com/edbentley/replay/edit/master/website/docs/tutorial/14.md"},c=[],l={rightToc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"14---pipes"},"14 - Pipes"),Object(a.b)("p",null,"There's not much challenge to the game now, so let's add some green pipes that move across the screen for the bird to dodge."),Object(a.b)("p",null,"As you might have guessed by now, we'll add a ",Object(a.b)("inlineCode",{parentName:"p"},"Pipe")," Sprite for that. Each pipe is 2 rectangles with a gap in the middle. We need to do some math to calculate the ",Object(a.b)("inlineCode",{parentName:"p"},"y")," coordinate of each rectangle - remembering the ",Object(a.b)("inlineCode",{parentName:"p"},"y")," coordinate is the center of the rectangle."),Object(a.b)("p",null,"Next we need to add our pipes in the ",Object(a.b)("inlineCode",{parentName:"p"},"Level")," Sprite's state, defining it in the ",Object(a.b)("inlineCode",{parentName:"p"},"init")," method. Then in the ",Object(a.b)("inlineCode",{parentName:"p"},"loop")," method we update the state to move the pipe. Lastly in ",Object(a.b)("inlineCode",{parentName:"p"},"render")," we map the ",Object(a.b)("inlineCode",{parentName:"p"},"pipe")," state to the ",Object(a.b)("inlineCode",{parentName:"p"},"Pipe")," Sprite."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"newPipe")," function sets a random ",Object(a.b)("inlineCode",{parentName:"p"},"y")," coordinate for the pipe gap, which our bird has to jump through. The ",Object(a.b)("inlineCode",{parentName:"p"},"device")," parameter has a ",Object(a.b)("inlineCode",{parentName:"p"},"random")," field, which works like ",Object(a.b)("inlineCode",{parentName:"p"},"Math.random"),". It's important to use Replay's ",Object(a.b)("inlineCode",{parentName:"p"},"random")," function to ensure the game works cross-platform."))}u.isMDXComponent=!0}}]);