(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{141:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),l=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=l(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=l(n),f=r,d=s["".concat(i,".").concat(f)]||s[f]||b[f]||a;return n?o.a.createElement(d,c(c({ref:t},u),{},{components:n})):o.a.createElement(d,c({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},55:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),a=(n(0),n(141)),i={},c={unversionedId:"tutorial/8",id:"tutorial/8",isDocsHomePage:!1,title:"8",description:"8 - Input",source:"@site/docs/tutorial/8.md",permalink:"/docs/tutorial/8",editUrl:"https://github.com/edbentley/replay/edit/master/website/docs/tutorial/8.md"},p=[],u={rightToc:p};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"8---input"},"8 - Input"),Object(a.b)("p",null,"It's time to have the bird jump when we click (or tap) the screen!"),Object(a.b)("p",null,"Sprite methods like ",Object(a.b)("inlineCode",{parentName:"p"},"loop")," have a ",Object(a.b)("inlineCode",{parentName:"p"},"device")," parameter to interface with the platform we're running on."),Object(a.b)("p",null,"Within ",Object(a.b)("inlineCode",{parentName:"p"},"device")," there's a field ",Object(a.b)("inlineCode",{parentName:"p"},"inputs")," which contains an object of what inputs are being pressed in the current frame. We want to access ",Object(a.b)("inlineCode",{parentName:"p"},"inputs.pointer")," which has information about the mouse (or touch on mobile)."),Object(a.b)("p",null,"When the ",Object(a.b)("inlineCode",{parentName:"p"},"pointer")," has just been pressed (which only happens for one frame) we return a different value of the ",Object(a.b)("inlineCode",{parentName:"p"},"birdGravity")," state to update gravity, thus giving our bird a jump upwards. Give it a try!"))}l.isMDXComponent=!0}}]);