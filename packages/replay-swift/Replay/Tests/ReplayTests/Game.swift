// Swift 5.3 will support Package resources like a JS file
// https://github.com/apple/swift-evolution/blob/master/proposals/0271-package-manager-resources.md
// Until then, we'll just copy game.js as a string here

let gameJsString = """
var game=function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";function o(e){var t,r,o;return{x:e.x||0,y:e.y||0,rotation:e.rotation||0,opacity:Math.min(1,Math.max(0,null!==(t=e.opacity)&&void 0!==t?t:1)),scaleX:null!==(r=e.scaleX)&&void 0!==r?r:1,scaleY:null!==(o=e.scaleY)&&void 0!==o?o:1,anchorX:e.anchorX||0,anchorY:e.anchorY||0}}r.r(t),r.d(t,"gameProps",(function(){return i})),r.d(t,"Game",(function(){return s}));const n=e=>({type:"text",props:{testId:e.testId,...o(e),font:e.font,text:e.text,align:e.align||"center",color:e.color}}),a=e=>({type:"circle",props:{testId:e.testId,...o(e),radius:e.radius,color:e.color}});const i={id:"Game",size:{width:500,height:300,maxWidthMargin:50,maxHeightMargin:50},defaultFont:{name:"Arial",size:16}},s=(u={init:()=>({playerX:100,enemiesX:[]}),loop({state:e,device:t,updateState:r}){const{pointer:o}=t.inputs,n=e=>{r(t=>({...t,enemiesX:t.enemiesX.concat(e)}))};return o.justPressed&&(100===o.x?t.timeout(()=>{n(100)},50):101===o.x?n(1e3*t.random()):102===o.x?(t.network.get("/test",e=>{n(e.x)}),t.network.post("/test",{x:100},e=>{n(e.x)}),t.network.put("/test",{x:100},e=>{n(e.x)}),t.network.delete("/test",e=>{n(e.x)})):103===o.x?n(t.now().getSeconds()):104===o.x?t.audio("sound.wav").play():105===o.x?t.audio("sound.wav").play(20):106===o.x?t.audio("sound.wav").play(0,!0):107===o.x?t.audio("sound.wav").pause():108===o.x?n(t.audio("sound.wav").getPosition()):109===o.x?t.log("Hello Replay!"):110===o.x?t.log(t.storage.getStore().testKey):111===o.x&&t.storage.setStore({testKey:"testValue"})),{...e,playerX:e.playerX+(t.inputs.pointer.pressed?1:0)}},render:({state:e,device:t})=>[t.inputs.pointer.pressed?null:l({id:"native"}),n({x:-100,font:{name:"serif",size:22},color:"red",text:"Test text"}),a({x:e.playerX,radius:10,color:"#0095DD"}),...e.enemiesX.map(e=>a({x:e,radius:10,color:"#0095DD"}))]},e=>({type:"custom",spriteObj:u,props:e}));var u;const l=(c="NativeSprite",e=>({type:"native",name:c,props:e}));var c}]);
"""
