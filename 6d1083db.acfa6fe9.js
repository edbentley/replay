(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{158:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=u(n),d=r,m=s["".concat(i,".").concat(d)]||s[d]||b[d]||o;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(158)),i={},c={unversionedId:"tutorial/17",id:"tutorial/17",isDocsHomePage:!1,title:"17",description:"17 - Storage",source:"@site/docs/tutorial/17.md",slug:"/tutorial/17",permalink:"/docs/tutorial/17",editUrl:"https://github.com/edbentley/replay/edit/master/website/docs/tutorial/17.md",version:"current"},p=[],l={toc:p};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"17---storage"},"17 - Storage"),Object(o.b)("p",null,"It would be nice to save a high score between plays! Replay provides a simple way to save things to local storage on the device."),Object(o.b)("p",null,"In our top-level ",Object(o.b)("inlineCode",{parentName:"p"},"Game")," Sprite we add a ",Object(o.b)("inlineCode",{parentName:"p"},"highScore")," state field. In ",Object(o.b)("inlineCode",{parentName:"p"},"init")," we want to set this value to be what's saved in local storage. ",Object(o.b)("inlineCode",{parentName:"p"},"device.storage.getItem(key)")," returns a Promise containing the string value we saved under the key ",Object(o.b)("inlineCode",{parentName:"p"},'"highScore"'),". When the Promise returns we update our high score field. If there's no ",Object(o.b)("inlineCode",{parentName:"p"},"highScore")," value saved from a previous game, then we set a default of ",Object(o.b)("inlineCode",{parentName:"p"},"0"),"."),Object(o.b)("p",null,"In the ",Object(o.b)("inlineCode",{parentName:"p"},"gameOver")," callback we'll have the ",Object(o.b)("inlineCode",{parentName:"p"},"Level")," Sprite pass in the current score. If it's higher than our ",Object(o.b)("inlineCode",{parentName:"p"},"highScore")," state value, we replace the value in the ",Object(o.b)("inlineCode",{parentName:"p"},"Game")," Sprite's state and the store. Calling ",Object(o.b)("inlineCode",{parentName:"p"},"device.storage.setItem(key, value)")," will save the value on the device under the key passed in."),Object(o.b)("p",null,"In the ",Object(o.b)("inlineCode",{parentName:"p"},"Level")," Sprite we need to pass the score into the ",Object(o.b)("inlineCode",{parentName:"p"},"gameOver")," callback."),Object(o.b)("p",null,"In the ",Object(o.b)("inlineCode",{parentName:"p"},"Menu")," Sprite we read the ",Object(o.b)("inlineCode",{parentName:"p"},"Game")," Sprite's ",Object(o.b)("inlineCode",{parentName:"p"},"highScore")," value through a prop and display it. In order to have the high score text stand out a bit, we explicitly set the font name and size through the ",Object(o.b)("inlineCode",{parentName:"p"},"font")," prop."))}u.isMDXComponent=!0}}]);