(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{159:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),l=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=l(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=l(n),d=r,m=s["".concat(i,".").concat(d)]||s[d]||b[d]||a;return n?o.a.createElement(m,p(p({ref:t},u),{},{components:n})):o.a.createElement(m,p({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},64:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(3),o=n(7),a=(n(0),n(159)),i={},p={unversionedId:"tutorial/12",id:"tutorial/12",isDocsHomePage:!1,title:"12",description:"12 - Sprite Props",source:"@site/docs/tutorial/12.md",slug:"/tutorial/12",permalink:"/docs/tutorial/12",editUrl:"https://github.com/edbentley/replay/edit/master/website/docs/tutorial/12.md",version:"current"},c=[],u={toc:c};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"12---sprite-props"},"12 - Sprite Props"),Object(a.b)("p",null,"To avoid our game auto-starting every time it loads, we need a way to pause the game, for example when in a menu screen. We can do this by passing ",Object(a.b)("inlineCode",{parentName:"p"},"props")," between Sprites."),Object(a.b)("p",null,"In our ",Object(a.b)("inlineCode",{parentName:"p"},"Level")," Sprite we can setup a ",Object(a.b)("inlineCode",{parentName:"p"},"paused")," prop which we access in the ",Object(a.b)("inlineCode",{parentName:"p"},"loop")," method. Pausing is simple: we just return early with the current ",Object(a.b)("inlineCode",{parentName:"p"},"state")," to avoid any of the game logic running."),Object(a.b)("p",null,"Then in our top-level ",Object(a.b)("inlineCode",{parentName:"p"},"Game")," Sprite we add some state to know if we're viewing the menu or not. If we are, we pause the level by passing the ",Object(a.b)("inlineCode",{parentName:"p"},"paused")," prop in."))}l.isMDXComponent=!0}}]);